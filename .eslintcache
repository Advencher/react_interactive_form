[{"C:\\Users\\AlexandrA\\Desktop\\web_dev\\vue_ui\\my-react-app\\src\\index.js":"1","C:\\Users\\AlexandrA\\Desktop\\web_dev\\vue_ui\\my-react-app\\src\\utils\\aes.js":"2","C:\\Users\\AlexandrA\\Desktop\\web_dev\\vue_ui\\my-react-app\\src\\utils\\aes-ctr.js":"3","C:\\Users\\AlexandrA\\Desktop\\web_dev\\vue_ui\\my-react-app\\src\\services\\api.service.js":"4","C:\\Users\\AlexandrA\\Desktop\\web_dev\\vue_ui\\my-react-app\\src\\components\\dialogs\\Dropzone.js":"5","C:\\Users\\AlexandrA\\Desktop\\web_dev\\vue_ui\\my-react-app\\src\\components\\dialogs\\ConfirmDialog.js":"6","C:\\Users\\AlexandrA\\Desktop\\web_dev\\vue_ui\\my-react-app\\src\\components\\custom\\customCompnents.js":"7","C:\\Users\\AlexandrA\\Desktop\\web_dev\\vue_ui\\my-react-app\\src\\components\\Ticket.js":"8","C:\\Users\\AlexandrA\\Desktop\\web_dev\\vue_ui\\my-react-app\\src\\App.js":"9","C:\\Users\\AlexandrA\\Desktop\\web_dev\\vue_ui\\my-react-app\\src\\UI\\UiFormController.js":"10","C:\\Users\\AlexandrA\\Desktop\\web_dev\\vue_ui\\my-react-app\\src\\components\\AppHeader.js":"11","C:\\Users\\AlexandrA\\Desktop\\web_dev\\vue_ui\\my-react-app\\src\\utils\\Util.js":"12","C:\\Users\\AlexandrA\\Desktop\\web_dev\\vue_ui\\my-react-app\\src\\UI\\TicketFormUi.js":"13","C:\\Users\\AlexandrA\\Desktop\\web_dev\\vue_ui\\my-react-app\\src\\services\\DataSourceWrapperHoc.js":"14"},{"size":450,"mtime":1615534378215,"results":"15","hashOfConfig":"16"},{"size":8176,"mtime":1612361948000,"results":"17","hashOfConfig":"16"},{"size":10550,"mtime":1615794052265,"results":"18","hashOfConfig":"16"},{"size":8688,"mtime":1616588901700,"results":"19","hashOfConfig":"16"},{"size":1575,"mtime":1616046819816,"results":"20","hashOfConfig":"16"},{"size":2045,"mtime":1616046848462,"results":"21","hashOfConfig":"16"},{"size":520,"mtime":1614763844763,"results":"22","hashOfConfig":"16"},{"size":9099,"mtime":1616479236024,"results":"23","hashOfConfig":"16"},{"size":1063,"mtime":1616572339274,"results":"24","hashOfConfig":"16"},{"size":3154,"mtime":1616589388162,"results":"25","hashOfConfig":"16"},{"size":356,"mtime":1614576496625,"results":"26","hashOfConfig":"16"},{"size":953,"mtime":1616571557643,"results":"27","hashOfConfig":"16"},{"size":5591,"mtime":1616589320516,"results":"28","hashOfConfig":"16"},{"size":1359,"mtime":1616589448846,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"128glx3",{"filePath":"33","messages":"34","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":1,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\AlexandrA\\Desktop\\web_dev\\vue_ui\\my-react-app\\src\\index.js",[],["62","63"],"C:\\Users\\AlexandrA\\Desktop\\web_dev\\vue_ui\\my-react-app\\src\\utils\\aes.js",["64","65","66","67","68","69","70","71","72","73"],"/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\r\n/* AES implementation in JavaScript                                   (c) Chris Veness 2005-2016  */\r\n/*                                                                                   MIT Licence  */\r\n/* www.movable-type.co.uk/scripts/aes.html                                                        */\r\n/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\r\n\r\n'use strict';\r\n\r\n\r\n/**\r\n * AES (Rijndael cipher) encryption routines,\r\n *\r\n * Reference implementation of FIPS-197 http://csrc.nist.gov/publications/fips/fips197/fips-197.pdf.\r\n *\r\n * @namespace\r\n */\r\nvar Aes = {};\r\n\r\n\r\n/**\r\n * AES Cipher function: encrypt 'input' state with Rijndael algorithm [§5.1];\r\n *   applies Nr rounds (10/12/14) using key schedule w for 'add round key' stage.\r\n *\r\n * @param   {number[]}   input - 16-byte (128-bit) input state array.\r\n * @param   {number[][]} w - Key schedule as 2D byte-array (Nr+1 x Nb bytes).\r\n * @returns {number[]}   Encrypted output state array.\r\n */\r\nAes.cipher = function(input, w) {\r\n    var Nb = 4;               // block size (in words): no of columns in state (fixed at 4 for AES)\r\n    var Nr = w.length/Nb - 1; // no of rounds: 10/12/14 for 128/192/256-bit keys\r\n\r\n    var state = [ [], [], [], [] ];  // initialise 4xNb byte-array 'state' with input [§3.4]\r\n    for (var i=0; i<4*Nb; i++) state[i%4][Math.floor(i/4)] = input[i];\r\n\r\n    state = Aes.addRoundKey(state, w, 0, Nb);\r\n\r\n    for (var round=1; round<Nr; round++) {\r\n        state = Aes.subBytes(state, Nb);\r\n        state = Aes.shiftRows(state, Nb);\r\n        state = Aes.mixColumns(state, Nb);\r\n        state = Aes.addRoundKey(state, w, round, Nb);\r\n    }\r\n\r\n    state = Aes.subBytes(state, Nb);\r\n    state = Aes.shiftRows(state, Nb);\r\n    state = Aes.addRoundKey(state, w, Nr, Nb);\r\n\r\n    var output = new Array(4*Nb);  // convert state to 1-d array before returning [§3.4]\r\n    for (var i=0; i<4*Nb; i++) output[i] = state[i%4][Math.floor(i/4)];\r\n\r\n    return output;\r\n};\r\n\r\n\r\n/**\r\n * Perform key expansion to generate a key schedule from a cipher key [§5.2].\r\n *\r\n * @param   {number[]}   key - Cipher key as 16/24/32-byte array.\r\n * @returns {number[][]} Expanded key schedule as 2D byte-array (Nr+1 x Nb bytes).\r\n */\r\nAes.keyExpansion = function(key) {\r\n    var Nb = 4;            // block size (in words): no of columns in state (fixed at 4 for AES)\r\n    var Nk = key.length/4; // key length (in words): 4/6/8 for 128/192/256-bit keys\r\n    var Nr = Nk + 6;       // no of rounds: 10/12/14 for 128/192/256-bit keys\r\n\r\n    var w = new Array(Nb*(Nr+1));\r\n    var temp = new Array(4);\r\n\r\n    // initialise first Nk words of expanded key with cipher key\r\n    for (var i=0; i<Nk; i++) {\r\n        var r = [ key[4*i], key[4*i+1], key[4*i+2], key[4*i+3] ];\r\n        w[i] = r;\r\n    }\r\n\r\n    // expand the key into the remainder of the schedule\r\n    for (var i=Nk; i<(Nb*(Nr+1)); i++) {\r\n        w[i] = new Array(4);\r\n        for (var t=0; t<4; t++) temp[t] = w[i-1][t];\r\n        // each Nk'th word has extra transformation\r\n        if (i % Nk == 0) {\r\n            temp = Aes.subWord(Aes.rotWord(temp));\r\n            for (var t=0; t<4; t++) temp[t] ^= Aes.rCon[i/Nk][t];\r\n        }\r\n        // 256-bit key has subWord applied every 4th word\r\n        else if (Nk > 6 && i%Nk == 4) {\r\n            temp = Aes.subWord(temp);\r\n        }\r\n        // xor w[i] with w[i-1] and w[i-Nk]\r\n        for (var t=0; t<4; t++) w[i][t] = w[i-Nk][t] ^ temp[t];\r\n    }\r\n\r\n    return w;\r\n};\r\n\r\n\r\n/**\r\n * Apply SBox to state S [§5.1.1]\r\n * @private\r\n */\r\nAes.subBytes = function(s, Nb) {\r\n    for (var r=0; r<4; r++) {\r\n        for (var c=0; c<Nb; c++) s[r][c] = Aes.sBox[s[r][c]];\r\n    }\r\n    return s;\r\n};\r\n\r\n\r\n/**\r\n * Shift row r of state S left by r bytes [§5.1.2]\r\n * @private\r\n */\r\nAes.shiftRows = function(s, Nb) {\r\n    var t = new Array(4);\r\n    for (var r=1; r<4; r++) {\r\n        for (var c=0; c<4; c++) t[c] = s[r][(c+r)%Nb];  // shift into temp copy\r\n        for (var c=0; c<4; c++) s[r][c] = t[c];         // and copy back\r\n    }          // note that this will work for Nb=4,5,6, but not 7,8 (always 4 for AES):\r\n    return s;  // see asmaes.sourceforge.net/rijndael/rijndaelImplementation.pdf\r\n};\r\n\r\n\r\n/**\r\n * Combine bytes of each col of state S [§5.1.3]\r\n * @private\r\n */\r\nAes.mixColumns = function(s, Nb) {\r\n    for (var c=0; c<4; c++) {\r\n        var a = new Array(4);  // 'a' is a copy of the current column from 's'\r\n        var b = new Array(4);  // 'b' is a•{02} in GF(2^8)\r\n        for (var i=0; i<4; i++) {\r\n            a[i] = s[i][c];\r\n            b[i] = s[i][c]&0x80 ? s[i][c]<<1 ^ 0x011b : s[i][c]<<1;\r\n        }\r\n        // a[n] ^ b[n] is a•{03} in GF(2^8)\r\n        s[0][c] = b[0] ^ a[1] ^ b[1] ^ a[2] ^ a[3]; // {02}•a0 + {03}•a1 + a2 + a3\r\n        s[1][c] = a[0] ^ b[1] ^ a[2] ^ b[2] ^ a[3]; // a0 • {02}•a1 + {03}•a2 + a3\r\n        s[2][c] = a[0] ^ a[1] ^ b[2] ^ a[3] ^ b[3]; // a0 + a1 + {02}•a2 + {03}•a3\r\n        s[3][c] = a[0] ^ b[0] ^ a[1] ^ a[2] ^ b[3]; // {03}•a0 + a1 + a2 + {02}•a3\r\n    }\r\n    return s;\r\n};\r\n\r\n\r\n/**\r\n * Xor Round Key into state S [§5.1.4]\r\n * @private\r\n */\r\nAes.addRoundKey = function(state, w, rnd, Nb) {\r\n    for (var r=0; r<4; r++) {\r\n        for (var c=0; c<Nb; c++) state[r][c] ^= w[rnd*4+c][r];\r\n    }\r\n    return state;\r\n};\r\n\r\n\r\n/**\r\n * Apply SBox to 4-byte word w\r\n * @private\r\n */\r\nAes.subWord = function(w) {\r\n    for (var i=0; i<4; i++) w[i] = Aes.sBox[w[i]];\r\n    return w;\r\n};\r\n\r\n\r\n/**\r\n * Rotate 4-byte word w left by one byte\r\n * @private\r\n */\r\nAes.rotWord = function(w) {\r\n    var tmp = w[0];\r\n    for (var i=0; i<3; i++) w[i] = w[i+1];\r\n    w[3] = tmp;\r\n    return w;\r\n};\r\n\r\n\r\n// sBox is pre-computed multiplicative inverse in GF(2^8) used in subBytes and keyExpansion [§5.1.1]\r\nAes.sBox = [ 0x63,0x7c,0x77,0x7b,0xf2,0x6b,0x6f,0xc5,0x30,0x01,0x67,0x2b,0xfe,0xd7,0xab,0x76,\r\n             0xca,0x82,0xc9,0x7d,0xfa,0x59,0x47,0xf0,0xad,0xd4,0xa2,0xaf,0x9c,0xa4,0x72,0xc0,\r\n             0xb7,0xfd,0x93,0x26,0x36,0x3f,0xf7,0xcc,0x34,0xa5,0xe5,0xf1,0x71,0xd8,0x31,0x15,\r\n             0x04,0xc7,0x23,0xc3,0x18,0x96,0x05,0x9a,0x07,0x12,0x80,0xe2,0xeb,0x27,0xb2,0x75,\r\n             0x09,0x83,0x2c,0x1a,0x1b,0x6e,0x5a,0xa0,0x52,0x3b,0xd6,0xb3,0x29,0xe3,0x2f,0x84,\r\n             0x53,0xd1,0x00,0xed,0x20,0xfc,0xb1,0x5b,0x6a,0xcb,0xbe,0x39,0x4a,0x4c,0x58,0xcf,\r\n             0xd0,0xef,0xaa,0xfb,0x43,0x4d,0x33,0x85,0x45,0xf9,0x02,0x7f,0x50,0x3c,0x9f,0xa8,\r\n             0x51,0xa3,0x40,0x8f,0x92,0x9d,0x38,0xf5,0xbc,0xb6,0xda,0x21,0x10,0xff,0xf3,0xd2,\r\n             0xcd,0x0c,0x13,0xec,0x5f,0x97,0x44,0x17,0xc4,0xa7,0x7e,0x3d,0x64,0x5d,0x19,0x73,\r\n             0x60,0x81,0x4f,0xdc,0x22,0x2a,0x90,0x88,0x46,0xee,0xb8,0x14,0xde,0x5e,0x0b,0xdb,\r\n             0xe0,0x32,0x3a,0x0a,0x49,0x06,0x24,0x5c,0xc2,0xd3,0xac,0x62,0x91,0x95,0xe4,0x79,\r\n             0xe7,0xc8,0x37,0x6d,0x8d,0xd5,0x4e,0xa9,0x6c,0x56,0xf4,0xea,0x65,0x7a,0xae,0x08,\r\n             0xba,0x78,0x25,0x2e,0x1c,0xa6,0xb4,0xc6,0xe8,0xdd,0x74,0x1f,0x4b,0xbd,0x8b,0x8a,\r\n             0x70,0x3e,0xb5,0x66,0x48,0x03,0xf6,0x0e,0x61,0x35,0x57,0xb9,0x86,0xc1,0x1d,0x9e,\r\n             0xe1,0xf8,0x98,0x11,0x69,0xd9,0x8e,0x94,0x9b,0x1e,0x87,0xe9,0xce,0x55,0x28,0xdf,\r\n             0x8c,0xa1,0x89,0x0d,0xbf,0xe6,0x42,0x68,0x41,0x99,0x2d,0x0f,0xb0,0x54,0xbb,0x16 ];\r\n\r\n\r\n// rCon is Round Constant used for the Key Expansion [1st col is 2^(r-1) in GF(2^8)] [§5.2]\r\nAes.rCon = [ [ 0x00, 0x00, 0x00, 0x00 ],\r\n             [ 0x01, 0x00, 0x00, 0x00 ],\r\n             [ 0x02, 0x00, 0x00, 0x00 ],\r\n             [ 0x04, 0x00, 0x00, 0x00 ],\r\n             [ 0x08, 0x00, 0x00, 0x00 ],\r\n             [ 0x10, 0x00, 0x00, 0x00 ],\r\n             [ 0x20, 0x00, 0x00, 0x00 ],\r\n             [ 0x40, 0x00, 0x00, 0x00 ],\r\n             [ 0x80, 0x00, 0x00, 0x00 ],\r\n             [ 0x1b, 0x00, 0x00, 0x00 ],\r\n             [ 0x36, 0x00, 0x00, 0x00 ] ];\r\n\r\n\r\n/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\r\nif (typeof module != 'undefined' && module.exports) module.exports = Aes; // ≡ export default Aes\r\n","C:\\Users\\AlexandrA\\Desktop\\web_dev\\vue_ui\\my-react-app\\src\\utils\\aes-ctr.js",["74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96"],"/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\r\n/*  AES counter-mode (CTR) implementation in JavaScript               (c) Chris Veness 2005-2016  */\r\n/*                                                                                   MIT Licence  */\r\n/* www.movable-type.co.uk/scripts/aes.html                                                        */\r\n/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\r\n\r\n/* global WorkerGlobalScope */\r\n'use strict';\r\nif (typeof module!='undefined' && module.exports) var Aes = require('./aes.js'); // ≡ import Aes from 'aes.js'\r\n\r\n\r\n/**\r\n * Aes.Ctr: Counter-mode (CTR) wrapper for AES.\r\n *\r\n * This encrypts a Unicode string to produces a base64 ciphertext using 128/192/256-bit AES,\r\n * and the converse to decrypt an encrypted ciphertext.\r\n *\r\n * See http://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf\r\n *\r\n * @augments Aes\r\n */\r\nAes.Ctr = {};\r\n\r\n\r\n/**\r\n * Encrypt a text using AES encryption in Counter mode of operation.\r\n *\r\n * Unicode multi-byte character safe\r\n *\r\n * @param   {string} plaintext - Source text to be encrypted.\r\n * @param   {string} password - The password to use to generate a key for encryption.\r\n * @param   {number} nBits - Number of bits to be used in the key; 128 / 192 / 256.\r\n * @returns {string} Encrypted text.\r\n *\r\n * @example\r\n *   var encr = Aes.Ctr.encrypt('big secret', 'pāşšŵōřđ', 256); // 'lwGl66VVwVObKIr6of8HVqJr'\r\n */\r\nAes.Ctr.encrypt = function(plaintext, password, nBits) {\r\n    var blockSize = 16;  // block size fixed at 16 bytes / 128 bits (Nb=4) for AES\r\n    if (!(nBits==128 || nBits==192 || nBits==256)) throw new Error('Key size is not 128 / 192 / 256');\r\n    plaintext = String(plaintext).utf8Encode();\r\n    password = String(password).utf8Encode();\r\n\r\n    // use AES itself to encrypt password to get cipher key (using plain password as source for key\r\n    // expansion) - gives us well encrypted key (though hashed key might be preferred for prod'n use)\r\n    var nBytes = nBits/8;  // no bytes in key (16/24/32)\r\n    var pwBytes = new Array(nBytes);\r\n    for (var i=0; i<nBytes; i++) {  // use 1st 16/24/32 chars of password for key\r\n        pwBytes[i] = i<password.length ?  password.charCodeAt(i) : 0;\r\n    }\r\n    var key = Aes.cipher(pwBytes, Aes.keyExpansion(pwBytes)); // gives us 16-byte key\r\n    key = key.concat(key.slice(0, nBytes-16));  // expand key to 16/24/32 bytes long\r\n\r\n    // initialise 1st 8 bytes of counter block with nonce (NIST SP800-38A §B.2): [0-1] = millisec,\r\n    // [2-3] = random, [4-7] = seconds, together giving full sub-millisec uniqueness up to Feb 2106\r\n    var counterBlock = new Array(blockSize);\r\n\r\n    var nonce = (new Date()).getTime();  // timestamp: milliseconds since 1-Jan-1970\r\n    var nonceMs = nonce%1000;\r\n    var nonceSec = Math.floor(nonce/1000);\r\n    var nonceRnd = Math.floor(Math.random()*0xffff);\r\n    // for debugging: nonce = nonceMs = nonceSec = nonceRnd = 0;\r\n\r\n    for (var i=0; i<2; i++) counterBlock[i]   = (nonceMs  >>> i*8) & 0xff;\r\n    for (var i=0; i<2; i++) counterBlock[i+2] = (nonceRnd >>> i*8) & 0xff;\r\n    for (var i=0; i<4; i++) counterBlock[i+4] = (nonceSec >>> i*8) & 0xff;\r\n\r\n    // and convert it to a string to go on the front of the ciphertext\r\n    var ctrTxt = '';\r\n    for (var i=0; i<8; i++) ctrTxt += String.fromCharCode(counterBlock[i]);\r\n\r\n    // generate key schedule - an expansion of the key into distinct Key Rounds for each round\r\n    var keySchedule = Aes.keyExpansion(key);\r\n\r\n    var blockCount = Math.ceil(plaintext.length/blockSize);\r\n    var ciphertext = '';\r\n\r\n    for (var b=0; b<blockCount; b++) {\r\n        // set counter (block #) in last 8 bytes of counter block (leaving nonce in 1st 8 bytes)\r\n        // done in two stages for 32-bit ops: using two words allows us to go past 2^32 blocks (68GB)\r\n        for (var c=0; c<4; c++) counterBlock[15-c] = (b >>> c*8) & 0xff;\r\n        for (var c=0; c<4; c++) counterBlock[15-c-4] = (b/0x100000000 >>> c*8);\r\n\r\n        var cipherCntr = Aes.cipher(counterBlock, keySchedule);  // -- encrypt counter block --\r\n\r\n        // block size is reduced on final block\r\n        var blockLength = b<blockCount-1 ? blockSize : (plaintext.length-1)%blockSize+1;\r\n        var cipherChar = new Array(blockLength);\r\n\r\n        for (var i=0; i<blockLength; i++) {\r\n            // -- xor plaintext with ciphered counter char-by-char --\r\n            cipherChar[i] = cipherCntr[i] ^ plaintext.charCodeAt(b*blockSize+i);\r\n            cipherChar[i] = String.fromCharCode(cipherChar[i]);\r\n        }\r\n        ciphertext += cipherChar.join('');\r\n\r\n        // if within web worker, announce progress every 1000 blocks (roughly every 50ms)\r\n        if (typeof WorkerGlobalScope != 'undefined' && window.self instanceof WorkerGlobalScope) {\r\n            if (b%1000 == 0) window.self.postMessage({ progress: b/blockCount });\r\n        }\r\n    }\r\n\r\n    ciphertext =  (ctrTxt+ciphertext).base64Encode();\r\n\r\n    return ciphertext;\r\n};\r\n\r\n\r\n/**\r\n * Decrypt a text encrypted by AES in counter mode of operation\r\n *\r\n * @param   {string} ciphertext - Cipher text to be decrypted.\r\n * @param   {string} password - Password to use to generate a key for decryption.\r\n * @param   {number} nBits - Number of bits to be used in the key; 128 / 192 / 256.\r\n * @returns {string} Decrypted text\r\n *\r\n * @example\r\n *   var decr = Aes.Ctr.decrypt('lwGl66VVwVObKIr6of8HVqJr', 'pāşšŵōřđ', 256); // 'big secret'\r\n */\r\nAes.Ctr.decrypt = function(ciphertext, password, nBits) {\r\n    var blockSize = 16;  // block size fixed at 16 bytes / 128 bits (Nb=4) for AES\r\n    if (!(nBits==128 || nBits==192 || nBits==256)) throw new Error('Key size is not 128 / 192 / 256');\r\n    ciphertext = String(ciphertext).base64Decode();\r\n    password = String(password).utf8Encode();\r\n\r\n    // use AES to encrypt password (mirroring encrypt routine)\r\n    var nBytes = nBits/8;  // no bytes in key\r\n    var pwBytes = new Array(nBytes);\r\n    for (var i=0; i<nBytes; i++) {\r\n        pwBytes[i] = i<password.length ?  password.charCodeAt(i) : 0;\r\n    }\r\n    var key = Aes.cipher(pwBytes, Aes.keyExpansion(pwBytes));\r\n    key = key.concat(key.slice(0, nBytes-16));  // expand key to 16/24/32 bytes long\r\n\r\n    // recover nonce from 1st 8 bytes of ciphertext\r\n    var counterBlock = new Array(8);\r\n    var ctrTxt = ciphertext.slice(0, 8);\r\n    for (var i=0; i<8; i++) counterBlock[i] = ctrTxt.charCodeAt(i);\r\n\r\n    // generate key schedule\r\n    var keySchedule = Aes.keyExpansion(key);\r\n\r\n    // separate ciphertext into blocks (skipping past initial 8 bytes)\r\n    var nBlocks = Math.ceil((ciphertext.length-8) / blockSize);\r\n    var ct = new Array(nBlocks);\r\n    for (var b=0; b<nBlocks; b++) ct[b] = ciphertext.slice(8+b*blockSize, 8+b*blockSize+blockSize);\r\n    ciphertext = ct;  // ciphertext is now array of block-length strings\r\n\r\n    // plaintext will get generated block-by-block into array of block-length strings\r\n    var plaintext = '';\r\n\r\n    for (var b=0; b<nBlocks; b++) {\r\n        // set counter (block #) in last 8 bytes of counter block (leaving nonce in 1st 8 bytes)\r\n        for (var c=0; c<4; c++) counterBlock[15-c] = ((b) >>> c*8) & 0xff;\r\n        for (var c=0; c<4; c++) counterBlock[15-c-4] = (((b+1)/0x100000000-1) >>> c*8) & 0xff;\r\n\r\n        var cipherCntr = Aes.cipher(counterBlock, keySchedule);  // encrypt counter block\r\n\r\n        var plaintxtByte = new Array(ciphertext[b].length);\r\n        for (var i=0; i<ciphertext[b].length; i++) {\r\n            // -- xor plaintext with ciphered counter byte-by-byte --\r\n            plaintxtByte[i] = cipherCntr[i] ^ ciphertext[b].charCodeAt(i);\r\n            plaintxtByte[i] = String.fromCharCode(plaintxtByte[i]);\r\n        }\r\n        plaintext += plaintxtByte.join('');\r\n\r\n        // if within web worker, announce progress every 1000 blocks (roughly every 50ms)\r\n        if (typeof WorkerGlobalScope != 'undefined' && window.self instanceof WorkerGlobalScope) {\r\n            if (b%1000 == 0) window.self.postMessage({ progress: b/nBlocks });\r\n        }\r\n    }\r\n\r\n    plaintext = plaintext.utf8Decode();  // decode from UTF8 back to Unicode multi-byte chars\r\n\r\n    return plaintext;\r\n};\r\n\r\n\r\n/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\r\n\r\n/* Extend String object with method to encode multi-byte string to utf8\r\n * - monsur.hossa.in/2012/07/20/utf-8-in-javascript.html\r\n * - note utf8Encode is an identity function with 7-bit ascii strings, but not with 8-bit strings;\r\n * - utf8Encode('x') = 'x', but utf8Encode('ça') = 'Ã§a', and utf8Encode('Ã§a') = 'ÃÂ§a'*/\r\nif (typeof String.prototype.utf8Encode == 'undefined') {\r\n    String.prototype.utf8Encode = function() {\r\n        return unescape( encodeURIComponent( this ) );\r\n    };\r\n}\r\n\r\n/* Extend String object with method to decode utf8 string to multi-byte */\r\nif (typeof String.prototype.utf8Decode == 'undefined') {\r\n    String.prototype.utf8Decode = function() {\r\n        try {\r\n            return decodeURIComponent( escape( this ) );\r\n        } catch (e) {\r\n            return this; // invalid UTF-8? return as-is\r\n        }\r\n    };\r\n}\r\n\r\n/* Extend String object with method to encode base64\r\n * - developer.mozilla.org/en-US/docs/Web/API/window.btoa, nodejs.org/api/buffer.html\r\n * - note: btoa & Buffer/binary work on single-byte Unicode (C0/C1), so ok for utf8 strings, not for general Unicode...\r\n * - note: if btoa()/atob() are not available (eg IE9-), try github.com/davidchambers/Base64.js */\r\nif (typeof String.prototype.base64Encode == 'undefined') {\r\n    String.prototype.base64Encode = function() {\r\n        if (typeof btoa != 'undefined') return btoa(this); // browser\r\n        if (typeof Buffer != 'undefined') return new Buffer(this, 'binary').toString('base64'); // Node.js\r\n        throw new Error('No Base64 Encode');\r\n    };\r\n}\r\n\r\n/* Extend String object with method to decode base64 */\r\nif (typeof String.prototype.base64Decode == 'undefined') {\r\n    String.prototype.base64Decode = function() {\r\n        if (typeof atob != 'undefined') return atob(this); // browser\r\n        if (typeof Buffer != 'undefined') return new Buffer(this, 'base64').toString('binary'); // Node.js\r\n        throw new Error('No Base64 Decode');\r\n    };\r\n}\r\n\r\n\r\n/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\r\nif (typeof module != 'undefined' && module.exports) module.exports = Aes.Ctr; // ≡ export default Aes.Ctr\r\n","C:\\Users\\AlexandrA\\Desktop\\web_dev\\vue_ui\\my-react-app\\src\\services\\api.service.js",["97","98","99","100","101"],"C:\\Users\\AlexandrA\\Desktop\\web_dev\\vue_ui\\my-react-app\\src\\components\\dialogs\\Dropzone.js",[],"C:\\Users\\AlexandrA\\Desktop\\web_dev\\vue_ui\\my-react-app\\src\\components\\dialogs\\ConfirmDialog.js",[],"C:\\Users\\AlexandrA\\Desktop\\web_dev\\vue_ui\\my-react-app\\src\\components\\custom\\customCompnents.js",[],"C:\\Users\\AlexandrA\\Desktop\\web_dev\\vue_ui\\my-react-app\\src\\components\\Ticket.js",[],"C:\\Users\\AlexandrA\\Desktop\\web_dev\\vue_ui\\my-react-app\\src\\App.js",["102"],"import React, { Fragment } from 'react';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\nimport Navbar from \"./components/Navbar\";\nimport {CssBaseline,withStyles,} from '@material-ui/core';\nimport AppHeader from './components/AppHeader';\nimport Home from './pages/Home';\nimport  Ticket from './components/Ticket.js';\nimport DataSourceWrapperHoc from \"./services/DataSourceWrapperHoc\";\n\nconst styles = theme => ({\n  main: {\n    backgroundColor: \"\",\n    padding: theme.spacing(3),\n    [theme.breakpoints.down('xs')]: {\n      padding: theme.spacing(2),\n    },\n  },\n});\n\nconst App = ({ classes }) => (\n  <Fragment>\n    <CssBaseline />\n    <AppHeader />\n  <BrowserRouter basename='/react'>\n  <Navbar />\n  <div className=\"container mt-2\" style={{ marginTop: 40 }}>\n    <Switch>\n    <Route exact path=\"/\" component={Home} />\n    <Route exact path=\"/new_ticket\" component= { DataSourceWrapperHoc } />\n    <Route path=\"*\" render={() => \"404 Not found!\"} />\n  </Switch>\n  </div>\n  </BrowserRouter>\n  </Fragment>\n);\n\nexport default withStyles(styles)(App);\n","C:\\Users\\AlexandrA\\Desktop\\web_dev\\vue_ui\\my-react-app\\src\\UI\\UiFormController.js",[],"C:\\Users\\AlexandrA\\Desktop\\web_dev\\vue_ui\\my-react-app\\src\\components\\AppHeader.js",[],"C:\\Users\\AlexandrA\\Desktop\\web_dev\\vue_ui\\my-react-app\\src\\utils\\Util.js",[],"C:\\Users\\AlexandrA\\Desktop\\web_dev\\vue_ui\\my-react-app\\src\\UI\\TicketFormUi.js",["103"],"C:\\Users\\AlexandrA\\Desktop\\web_dev\\vue_ui\\my-react-app\\src\\services\\DataSourceWrapperHoc.js",["104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":7,"column":1,"nodeType":"111","messageId":"112","endLine":7,"endColumn":14,"fix":"113"},{"ruleId":"114","severity":1,"message":"115","line":49,"column":14,"nodeType":"116","messageId":"117","endLine":49,"endColumn":15},{"ruleId":"114","severity":1,"message":"115","line":76,"column":14,"nodeType":"116","messageId":"117","endLine":76,"endColumn":15},{"ruleId":"118","severity":1,"message":"119","line":80,"column":20,"nodeType":"120","messageId":"121","endLine":80,"endColumn":22},{"ruleId":"114","severity":1,"message":"122","line":82,"column":22,"nodeType":"116","messageId":"117","endLine":82,"endColumn":23},{"ruleId":"118","severity":1,"message":"119","line":85,"column":33,"nodeType":"120","messageId":"121","endLine":85,"endColumn":35},{"ruleId":"114","severity":1,"message":"122","line":89,"column":18,"nodeType":"116","messageId":"117","endLine":89,"endColumn":19},{"ruleId":"114","severity":1,"message":"123","line":116,"column":18,"nodeType":"116","messageId":"117","endLine":116,"endColumn":19},{"ruleId":"124","severity":1,"message":"125","line":132,"column":42,"nodeType":"120","messageId":"126","endLine":132,"endColumn":44},{"ruleId":"124","severity":1,"message":"125","line":132,"column":46,"nodeType":"120","messageId":"126","endLine":132,"endColumn":47},{"ruleId":"109","severity":1,"message":"110","line":8,"column":1,"nodeType":"111","messageId":"112","endLine":8,"endColumn":14,"fix":"127"},{"ruleId":"118","severity":1,"message":"119","line":40,"column":16,"nodeType":"120","messageId":"121","endLine":40,"endColumn":18},{"ruleId":"118","severity":1,"message":"119","line":40,"column":30,"nodeType":"120","messageId":"121","endLine":40,"endColumn":32},{"ruleId":"118","severity":1,"message":"119","line":40,"column":44,"nodeType":"120","messageId":"121","endLine":40,"endColumn":46},{"ruleId":"114","severity":1,"message":"115","line":64,"column":14,"nodeType":"116","messageId":"117","endLine":64,"endColumn":15},{"ruleId":"114","severity":1,"message":"115","line":65,"column":14,"nodeType":"116","messageId":"117","endLine":65,"endColumn":15},{"ruleId":"114","severity":1,"message":"115","line":66,"column":14,"nodeType":"116","messageId":"117","endLine":66,"endColumn":15},{"ruleId":"114","severity":1,"message":"115","line":70,"column":14,"nodeType":"116","messageId":"117","endLine":70,"endColumn":15},{"ruleId":"114","severity":1,"message":"123","line":82,"column":18,"nodeType":"116","messageId":"117","endLine":82,"endColumn":19},{"ruleId":"114","severity":1,"message":"115","line":90,"column":18,"nodeType":"116","messageId":"117","endLine":90,"endColumn":19},{"ruleId":"118","severity":1,"message":"119","line":99,"column":24,"nodeType":"120","messageId":"121","endLine":99,"endColumn":26},{"ruleId":"118","severity":1,"message":"119","line":122,"column":16,"nodeType":"120","messageId":"121","endLine":122,"endColumn":18},{"ruleId":"118","severity":1,"message":"119","line":122,"column":30,"nodeType":"120","messageId":"121","endLine":122,"endColumn":32},{"ruleId":"118","severity":1,"message":"119","line":122,"column":44,"nodeType":"120","messageId":"121","endLine":122,"endColumn":46},{"ruleId":"114","severity":1,"message":"115","line":138,"column":14,"nodeType":"116","messageId":"117","endLine":138,"endColumn":15},{"ruleId":"114","severity":1,"message":"128","line":152,"column":14,"nodeType":"116","messageId":"117","endLine":152,"endColumn":15},{"ruleId":"114","severity":1,"message":"123","line":155,"column":18,"nodeType":"116","messageId":"117","endLine":155,"endColumn":19},{"ruleId":"114","severity":1,"message":"115","line":160,"column":18,"nodeType":"116","messageId":"117","endLine":160,"endColumn":19},{"ruleId":"118","severity":1,"message":"119","line":169,"column":24,"nodeType":"120","messageId":"121","endLine":169,"endColumn":26},{"ruleId":"129","severity":1,"message":"130","line":186,"column":5,"nodeType":"131","messageId":"121","endLine":188,"endColumn":6},{"ruleId":"129","severity":1,"message":"130","line":193,"column":5,"nodeType":"131","messageId":"121","endLine":199,"endColumn":6},{"ruleId":"129","severity":1,"message":"130","line":207,"column":5,"nodeType":"131","messageId":"121","endLine":211,"endColumn":6},{"ruleId":"129","severity":1,"message":"130","line":216,"column":5,"nodeType":"131","messageId":"121","endLine":220,"endColumn":6},{"ruleId":"132","severity":1,"message":"133","line":1,"column":8,"nodeType":"116","messageId":"134","endLine":1,"endColumn":15},{"ruleId":"132","severity":1,"message":"135","line":86,"column":13,"nodeType":"116","messageId":"134","endLine":86,"endColumn":29},{"ruleId":"118","severity":1,"message":"119","line":116,"column":22,"nodeType":"120","messageId":"121","endLine":116,"endColumn":24},{"ruleId":"118","severity":1,"message":"119","line":119,"column":29,"nodeType":"120","messageId":"121","endLine":119,"endColumn":31},{"ruleId":"132","severity":1,"message":"136","line":142,"column":11,"nodeType":"116","messageId":"134","endLine":142,"endColumn":29},{"ruleId":"132","severity":1,"message":"137","line":7,"column":9,"nodeType":"116","messageId":"134","endLine":7,"endColumn":15},{"ruleId":"132","severity":1,"message":"138","line":7,"column":10,"nodeType":"116","messageId":"134","endLine":7,"endColumn":17},{"ruleId":"132","severity":1,"message":"139","line":1,"column":17,"nodeType":"116","messageId":"134","endLine":1,"endColumn":26},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"142","text":"143"},"no-redeclare","'i' is already defined.","Identifier","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'t' is already defined.","'c' is already defined.","no-mixed-operators","Unexpected mix of '<<' and '^'.","unexpectedMixedOperator",{"range":"144","text":"143"},"'b' is already defined.","no-extend-native","String prototype is read only, properties should not be added.","AssignmentExpression","no-unused-vars","'extract' is defined but never used.","unusedVar","'setSessionCookie' is assigned a value but never used.","'setProjeqtorCookie' is assigned a value but never used.","'Ticket' is defined but never used.","'Gluejar' is defined but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation",[512,525],"",[544,557]]